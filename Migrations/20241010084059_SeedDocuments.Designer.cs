// <auto-generated />
using System;
using DMS_Hino.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DMS_Hino.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20241010084059_SeedDocuments")]
    partial class SeedDocuments
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DMS_Hino.Models.Category", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = "category1",
                            Name = "Legal"
                        },
                        new
                        {
                            Id = "category2",
                            Name = "Technical"
                        });
                });

            modelBuilder.Entity("DMS_Hino.Models.Department", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DivisionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("DMS_Hino.Models.Division", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Divisions");
                });

            modelBuilder.Entity("DMS_Hino.Models.Document", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DocumentItem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleasedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Reminder")
                        .HasColumnType("int");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VersionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Documents");

                    b.HasData(
                        new
                        {
                            Id = "doc1",
                            CategoryId = "existing-category1",
                            CreatedAt = new DateTime(2024, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = "existing-user1",
                            DocumentItem = "Legal Agreement",
                            ExpDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsPublic = true,
                            Location = "Locker A-1",
                            Name = "Service Agreement",
                            Number = "LA-2024-01",
                            ReleasedDate = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Reminder = 30,
                            Tag = "Contract",
                            VersionName = "v1.0"
                        },
                        new
                        {
                            Id = "doc2",
                            CategoryId = "existing-category2",
                            CreatedAt = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = "existing-user2",
                            DocumentItem = "Project Report",
                            ExpDate = new DateTime(2026, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsPublic = true,
                            Location = "Locker B-2",
                            Name = "Annual Report",
                            Number = "PR-2024-02",
                            ReleasedDate = new DateTime(2024, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Reminder = 60,
                            Tag = "Report",
                            VersionName = "v2.0"
                        },
                        new
                        {
                            Id = "doc3",
                            CategoryId = "existing-category3",
                            CreatedAt = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = "existing-user3",
                            DocumentItem = "User Guide",
                            IsPublic = false,
                            Location = "Locker C-3",
                            Name = "System User Guide",
                            Number = "UG-2024-03",
                            ReleasedDate = new DateTime(2024, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Tag = "Manual",
                            VersionName = "v3.0"
                        },
                        new
                        {
                            Id = "doc4",
                            CategoryId = "existing-category1",
                            CreatedAt = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = "existing-user4",
                            DocumentItem = "Policy Document",
                            ExpDate = new DateTime(2025, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsPublic = true,
                            Location = "Locker D-4",
                            Name = "Company Policy",
                            Number = "PD-2024-04",
                            ReleasedDate = new DateTime(2024, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Reminder = 45,
                            Tag = "Policy",
                            VersionName = "v1.1"
                        },
                        new
                        {
                            Id = "doc5",
                            CategoryId = "existing-category2",
                            CreatedAt = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = "existing-user5",
                            DocumentItem = "Invoice",
                            ExpDate = new DateTime(2025, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsPublic = false,
                            Location = "Locker E-5",
                            Name = "Invoice for Services",
                            Number = "IN-2024-05",
                            ReleasedDate = new DateTime(2024, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Reminder = 30,
                            Tag = "Invoice",
                            VersionName = "v1.0"
                        },
                        new
                        {
                            Id = "doc6",
                            CategoryId = "existing-category3",
                            CreatedAt = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = "existing-user6",
                            DocumentItem = "Audit Report",
                            ExpDate = new DateTime(2025, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsPublic = true,
                            Location = "Locker F-6",
                            Name = "Internal Audit",
                            Number = "AR-2024-06",
                            ReleasedDate = new DateTime(2024, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Reminder = 60,
                            Tag = "Audit",
                            VersionName = "v1.0"
                        },
                        new
                        {
                            Id = "doc7",
                            CategoryId = "existing-category1",
                            CreatedAt = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = "existing-user7",
                            DocumentItem = "Technical Specification",
                            ExpDate = new DateTime(2025, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsPublic = true,
                            Location = "Locker G-7",
                            Name = "Product Specification",
                            Number = "TS-2024-07",
                            ReleasedDate = new DateTime(2024, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Reminder = 15,
                            Tag = "Specification",
                            VersionName = "v2.1"
                        },
                        new
                        {
                            Id = "doc8",
                            CategoryId = "existing-category2",
                            CreatedAt = new DateTime(2024, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = "existing-user8",
                            DocumentItem = "Memo",
                            ExpDate = new DateTime(2025, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsPublic = false,
                            Location = "Locker H-8",
                            Name = "Internal Memo",
                            Number = "ME-2024-08",
                            ReleasedDate = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Reminder = 30,
                            Tag = "Memo",
                            VersionName = "v1.0"
                        },
                        new
                        {
                            Id = "doc9",
                            CategoryId = "existing-category3",
                            CreatedAt = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = "existing-user9",
                            DocumentItem = "Financial Statement",
                            IsPublic = true,
                            Location = "Locker I-9",
                            Name = "Quarterly Financials",
                            Number = "FS-2024-09",
                            ReleasedDate = new DateTime(2024, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Tag = "Finance",
                            VersionName = "v1.2"
                        },
                        new
                        {
                            Id = "doc10",
                            CategoryId = "existing-category1",
                            CreatedAt = new DateTime(2024, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = "existing-user10",
                            DocumentItem = "Presentation",
                            ExpDate = new DateTime(2025, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsPublic = false,
                            Location = "Locker J-10",
                            Name = "Project Presentation",
                            Number = "PR-2024-10",
                            ReleasedDate = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Reminder = 30,
                            Tag = "Presentation",
                            VersionName = "v1.0"
                        });
                });

            modelBuilder.Entity("DMS_Hino.Models.DocumentRelation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DocumentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RelationDocumentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("RelationDocumentId");

                    b.ToTable("DocumentRelations");
                });

            modelBuilder.Entity("DMS_Hino.Models.DocumentSharing", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DocumentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("UserId");

                    b.ToTable("DocumentSharings");
                });

            modelBuilder.Entity("DMS_Hino.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DepartmentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DivisionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DocumentUpload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DivisionId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DMS_Hino.Models.Department", b =>
                {
                    b.HasOne("DMS_Hino.Models.Division", "Division")
                        .WithMany("Departments")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Division");
                });

            modelBuilder.Entity("DMS_Hino.Models.Document", b =>
                {
                    b.HasOne("DMS_Hino.Models.Category", "Category")
                        .WithMany("Documents")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMS_Hino.Models.User", "CreatedBy")
                        .WithMany("CreatedDocuments")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DMS_Hino.Models.User", "ModifiedBy")
                        .WithMany("ModifiedDocuments")
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Category");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("DMS_Hino.Models.DocumentRelation", b =>
                {
                    b.HasOne("DMS_Hino.Models.Document", "Document")
                        .WithMany("RelatedDocuments")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DMS_Hino.Models.Document", "RelatedDocument")
                        .WithMany()
                        .HasForeignKey("RelationDocumentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Document");

                    b.Navigation("RelatedDocument");
                });

            modelBuilder.Entity("DMS_Hino.Models.DocumentSharing", b =>
                {
                    b.HasOne("DMS_Hino.Models.Document", "Document")
                        .WithMany("SharedDocuments")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DMS_Hino.Models.User", "User")
                        .WithMany("SharedDocuments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Document");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DMS_Hino.Models.User", b =>
                {
                    b.HasOne("DMS_Hino.Models.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DMS_Hino.Models.Division", "Division")
                        .WithMany("Users")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Division");
                });

            modelBuilder.Entity("DMS_Hino.Models.Category", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("DMS_Hino.Models.Department", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("DMS_Hino.Models.Division", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("DMS_Hino.Models.Document", b =>
                {
                    b.Navigation("RelatedDocuments");

                    b.Navigation("SharedDocuments");
                });

            modelBuilder.Entity("DMS_Hino.Models.User", b =>
                {
                    b.Navigation("CreatedDocuments");

                    b.Navigation("ModifiedDocuments");

                    b.Navigation("SharedDocuments");
                });
#pragma warning restore 612, 618
        }
    }
}
