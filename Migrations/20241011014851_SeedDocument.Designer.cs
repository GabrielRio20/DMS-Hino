// <auto-generated />
using System;
using DMS_Hino.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DMS_Hino.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20241011014851_SeedDocument")]
    partial class SeedDocument
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DMS_Hino.Models.Category", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Name = "Category1"
                        },
                        new
                        {
                            Id = "2",
                            Name = "Category2"
                        });
                });

            modelBuilder.Entity("DMS_Hino.Models.Department", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DivisionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            DivisionId = "1",
                            Name = "Department1"
                        },
                        new
                        {
                            Id = "2",
                            DivisionId = "2",
                            Name = "Department2"
                        });
                });

            modelBuilder.Entity("DMS_Hino.Models.Division", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Divisions");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Name = "Division1"
                        },
                        new
                        {
                            Id = "2",
                            Name = "Division2"
                        });
                });

            modelBuilder.Entity("DMS_Hino.Models.Document", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DocumentItem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleasedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Reminder")
                        .HasColumnType("int");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VersionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Documents");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            CategoryId = "1",
                            CreatedAt = new DateTime(2024, 10, 11, 8, 48, 49, 867, DateTimeKind.Local).AddTicks(2815),
                            CreatedById = "1",
                            DocumentItem = "Item1",
                            ExpDate = new DateTime(2024, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsPublic = true,
                            Location = "A-1",
                            ModifiedAt = new DateTime(2024, 10, 11, 8, 48, 49, 867, DateTimeKind.Local).AddTicks(2827),
                            ModifiedById = "2",
                            Name = "Document1",
                            Number = "Doc001",
                            ReleasedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Reminder = 30,
                            Tag = "Important",
                            VersionName = "v1.0"
                        });
                });

            modelBuilder.Entity("DMS_Hino.Models.DocumentRelation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DocumentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RelationDocumentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("RelationDocumentId");

                    b.ToTable("DocumentRelations");
                });

            modelBuilder.Entity("DMS_Hino.Models.DocumentSharing", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DocumentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("UserId");

                    b.ToTable("DocumentSharings");
                });

            modelBuilder.Entity("DMS_Hino.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DepartmentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DivisionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DocumentUpload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DivisionId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            DepartmentId = "1",
                            DivisionId = "1",
                            Password = "hashedpassword",
                            Role = "Admin",
                            Username = "creatorUser"
                        },
                        new
                        {
                            Id = "2",
                            DepartmentId = "2",
                            DivisionId = "2",
                            Password = "hashedpassword",
                            Role = "User",
                            Username = "modifierUser"
                        });
                });

            modelBuilder.Entity("DMS_Hino.Models.Department", b =>
                {
                    b.HasOne("DMS_Hino.Models.Division", "Division")
                        .WithMany("Departments")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Division");
                });

            modelBuilder.Entity("DMS_Hino.Models.Document", b =>
                {
                    b.HasOne("DMS_Hino.Models.Category", "Category")
                        .WithMany("Documents")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMS_Hino.Models.User", "CreatedBy")
                        .WithMany("CreatedDocuments")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DMS_Hino.Models.User", "ModifiedBy")
                        .WithMany("ModifiedDocuments")
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Category");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("DMS_Hino.Models.DocumentRelation", b =>
                {
                    b.HasOne("DMS_Hino.Models.Document", "Document")
                        .WithMany("RelatedDocuments")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DMS_Hino.Models.Document", "RelatedDocument")
                        .WithMany()
                        .HasForeignKey("RelationDocumentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Document");

                    b.Navigation("RelatedDocument");
                });

            modelBuilder.Entity("DMS_Hino.Models.DocumentSharing", b =>
                {
                    b.HasOne("DMS_Hino.Models.Document", "Document")
                        .WithMany("SharedDocuments")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DMS_Hino.Models.User", "User")
                        .WithMany("SharedDocuments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Document");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DMS_Hino.Models.User", b =>
                {
                    b.HasOne("DMS_Hino.Models.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DMS_Hino.Models.Division", "Division")
                        .WithMany("Users")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Division");
                });

            modelBuilder.Entity("DMS_Hino.Models.Category", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("DMS_Hino.Models.Department", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("DMS_Hino.Models.Division", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("DMS_Hino.Models.Document", b =>
                {
                    b.Navigation("RelatedDocuments");

                    b.Navigation("SharedDocuments");
                });

            modelBuilder.Entity("DMS_Hino.Models.User", b =>
                {
                    b.Navigation("CreatedDocuments");

                    b.Navigation("ModifiedDocuments");

                    b.Navigation("SharedDocuments");
                });
#pragma warning restore 612, 618
        }
    }
}
